I":f<ul id="markdown-toc">
  <li><a href="#文章列表" id="markdown-toc-文章列表">文章列表</a></li>
  <li><a href="#程序编写" id="markdown-toc-程序编写">程序编写</a>    <ul>
      <li><a href="#与server通信" id="markdown-toc-与server通信">与Server通信</a></li>
      <li><a href="#解析json数据" id="markdown-toc-解析json数据">解析Json数据</a></li>
    </ul>
  </li>
</ul>

<h2 id="文章列表">文章列表</h2>

<ol>
  <li><a href="https://xkw168.github.io/2019/05/25/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%81%94%E7%BD%91%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E4%B8%80-%E5%B7%A5%E5%85%B7%E5%92%8C%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BB%8B%E7%BB%8D.html">从零开始搭建一个联网Android APP（一）—— 工具和基本概念介绍</a></li>
  <li><a href="https://xkw168.github.io/2019/05/25/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%81%94%E7%BD%91%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E4%BA%8C-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%A8%8B%E5%BA%8F.html">从零开始搭建一个联网Android APP（二）—— 服务器端程序</a></li>
  <li><a href="https://xkw168.github.io/2019/05/25/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%81%94%E7%BD%91%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E4%B8%89-Android%E7%AB%AF%E7%A8%8B%E5%BA%8F.html">从零开始搭建一个联网Android APP（三）—— Android端程序</a></li>
</ol>

<p>本文<a href="https://github.com/xkw168/account_book/tree/online">源码</a></p>

<p>注：该工程有两个branch，master为<a href="https://github.com/xkw168/account_book/releases">离线版本</a>，所有功能集成到Android端，便于使用；online为在线版本，适合喜欢折腾的人</p>

<p>注：本系列博客主要重点在于服务器端的程序开发、部署和Android端如何与服务器端通信，不涉及具体的Android开发内容。</p>

<hr />

<h2 id="程序编写">程序编写</h2>

<p>  这里主要描述Android端如何与server进行通信并解析返回的Json格式数据。主要涉及两个主要的库文件：</p>

<ol>
  <li>okhttp3 —— 用于与server通信</li>
  <li>GSON —— 用于解析Json格式数据</li>
</ol>

<h3 id="与server通信">与Server通信</h3>

<p>网络请求代码如下：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// GET</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">sendRequestGetAsy</span><span class="o">(</span><span class="nc">String</span> <span class="n">address</span><span class="o">,</span> <span class="n">okhttp3</span><span class="o">.</span><span class="na">Callback</span> <span class="n">callback</span><span class="o">){</span>
    <span class="nc">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">OkHttpClient</span><span class="o">();</span>
    <span class="nc">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="no">BASE_URL</span> <span class="o">+</span> <span class="n">address</span><span class="o">)</span>
            <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">enqueue</span><span class="o">(</span><span class="n">callback</span><span class="o">);</span>
<span class="o">}</span>

<span class="c1">// POST</span>
<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">addNewAccount</span><span class="o">(</span><span class="nc">Account</span> <span class="n">account</span><span class="o">,</span> <span class="n">okhttp3</span><span class="o">.</span><span class="na">Callback</span> <span class="n">callback</span><span class="o">){</span>
    <span class="nc">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">OkHttpClient</span><span class="o">();</span>
    <span class="nc">RequestBody</span> <span class="n">requestBody</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FormBody</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="n">account</span><span class="o">.</span><span class="na">getContent</span><span class="o">())</span>
            <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"number"</span><span class="o">,</span> <span class="nc">String</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="nc">Locale</span><span class="o">.</span><span class="na">CHINA</span><span class="o">,</span> <span class="s">"%.2f"</span><span class="o">,</span> <span class="n">account</span><span class="o">.</span><span class="na">getNumber</span><span class="o">()))</span>
            <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"person"</span><span class="o">,</span> <span class="n">account</span><span class="o">.</span><span class="na">getPerson</span><span class="o">())</span>
            <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"createTime"</span><span class="o">,</span> <span class="n">account</span><span class="o">.</span><span class="na">getCreateTime</span><span class="o">())</span>
            <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    <span class="nc">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="no">BASE_URL</span> <span class="o">+</span> <span class="no">ADD_ACCOUNT</span><span class="o">)</span>
            <span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="n">requestBody</span><span class="o">)</span>
            <span class="o">.</span><span class="na">build</span><span class="o">();</span>
    <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">enqueue</span><span class="o">(</span><span class="n">callback</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p>与server对应，这里也有GET和POST两种方式，GET方式就将参数全部写到address里面传进来就好，POST方式采用键值对的形式将参数添加到body里面。同时为了不阻塞现成，这里都采用异步的方式调用网络请求。</p>

<p>调用方式如下：</p>

<p><strong>GET</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kt">void</span> <span class="nf">getAccountInfo</span><span class="o">(){</span>
    <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="nc">HttpUtils</span><span class="o">.</span><span class="na">QUERY_ALL_ACCOUNT</span> <span class="o">+</span> <span class="no">OFFSET</span> <span class="o">+</span> <span class="s">"/"</span> <span class="o">+</span> <span class="no">LIMIT</span><span class="o">;</span>
    <span class="nc">HttpUtils</span><span class="o">.</span><span class="na">sendRequestGetAsy</span><span class="o">(</span><span class="n">str</span><span class="o">,</span> <span class="k">new</span> <span class="n">okhttp3</span><span class="o">.</span><span class="na">Callback</span><span class="o">()</span> <span class="o">{</span>
        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onFailure</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Call</span> <span class="n">call</span><span class="o">,</span> <span class="nd">@NonNull</span> <span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
            <span class="nc">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="no">TAG</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
            <span class="n">runOnUiThread</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
                <span class="n">swipeRefreshLayout</span><span class="o">.</span><span class="na">setRefreshing</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                <span class="n">showToast</span><span class="o">(</span><span class="s">"获取账单信息失败，请检查网络连接..."</span><span class="o">);</span>
            <span class="o">});</span>
        <span class="o">}</span>

        <span class="nd">@Override</span>
        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onResponse</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="nc">Call</span> <span class="n">call</span><span class="o">,</span> <span class="nd">@NonNull</span> <span class="nc">Response</span> <span class="n">response</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
            <span class="k">try</span><span class="o">{</span>
                <span class="k">assert</span> <span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">;</span>
                <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">body</span><span class="o">().</span><span class="na">string</span><span class="o">();</span>
                <span class="nc">JSONObject</span> <span class="n">jsonObject</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">JSONObject</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                <span class="c1">//子线程不能更新UI相关内容</span>
                <span class="n">updateAccountUI</span><span class="o">((</span><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Account</span><span class="o">&gt;)</span>
                        <span class="nc">HttpUtils</span><span class="o">.</span><span class="na">parseAllAccount</span><span class="o">(</span><span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="no">ACCOUNTS_INFO</span><span class="o">)));</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">isRefresh</span><span class="o">){</span>
                    <span class="n">runOnUiThread</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="o">{</span>
                        <span class="n">swipeRefreshLayout</span><span class="o">.</span><span class="na">setRefreshing</span><span class="o">(</span><span class="kc">false</span><span class="o">);</span>
                        <span class="n">isRefresh</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
                        <span class="k">new</span> <span class="nf">Handler</span><span class="o">().</span><span class="na">postDelayed</span><span class="o">(()</span> <span class="o">-&gt;</span> <span class="n">showToast</span><span class="o">(</span><span class="s">"数据更新完毕"</span><span class="o">),</span> <span class="mi">300</span><span class="o">);</span>
                    <span class="o">});</span>
                <span class="o">}</span>
            <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">JSONException</span> <span class="n">e</span><span class="o">){</span>
                <span class="nc">Log</span><span class="o">.</span><span class="na">e</span><span class="o">(</span><span class="no">TAG</span><span class="o">,</span> <span class="n">e</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">});</span>
<span class="o">}</span>

</code></pre></div></div>

<p><strong>POST</strong></p>

<p>这里直接传入一个自定义类的实例。</p>

<h3 id="解析json数据">解析Json数据</h3>

<p>在回调函数内，通过这句话<code class="language-plaintext highlighter-rouge">String str = response.body().string();</code>就可以取出服务器返回的数据内容。具体解析过程如下：</p>

<p>定义一个订单类，然后利用GSON提供的注解函数，标明每个字段对应的json函数键值是什么，然后就可以用GSON自动解析了。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.example.account_book</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.example.account_book.util.TimeUtils</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.google.gson.annotations.SerializedName</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.Serializable</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Account</span> <span class="kd">implements</span> <span class="nc">Serializable</span><span class="o">,</span> <span class="nc">Comparable</span><span class="o">&lt;</span><span class="nc">Account</span><span class="o">&gt;{</span>

    <span class="nd">@SerializedName</span><span class="o">(</span><span class="s">"_account_id"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>
    <span class="nd">@SerializedName</span><span class="o">(</span><span class="s">"_content"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">content</span><span class="o">;</span>
    <span class="nd">@SerializedName</span><span class="o">(</span><span class="s">"_number"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="kt">double</span> <span class="n">number</span><span class="o">;</span>
    <span class="nd">@SerializedName</span><span class="o">(</span><span class="s">"_person"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">person</span><span class="o">;</span>
    <span class="nd">@SerializedName</span><span class="o">(</span><span class="s">"_create_time"</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">createTime</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Account</span><span class="o">(){</span>
        <span class="k">this</span><span class="o">.</span><span class="na">content</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">=</span> <span class="mf">0.0</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">person</span> <span class="o">=</span> <span class="s">"xkw"</span><span class="o">;</span>
        <span class="k">this</span><span class="o">.</span><span class="na">createTime</span> <span class="o">=</span> <span class="nc">TimeUtils</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="kt">int</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getContent</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">content</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setContent</span><span class="o">(</span><span class="nc">String</span> <span class="n">content</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">double</span> <span class="nf">getNumber</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">number</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNumber</span><span class="o">(</span><span class="kt">double</span> <span class="n">number</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">=</span> <span class="n">number</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getPerson</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">person</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPerson</span><span class="o">(</span><span class="nc">String</span> <span class="n">person</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">person</span> <span class="o">=</span> <span class="n">person</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getCreateTime</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">createTime</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCreateTime</span><span class="o">(</span><span class="nc">String</span> <span class="n">createTime</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">createTime</span> <span class="o">=</span> <span class="n">createTime</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">toString</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="s">"Time: "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">createTime</span> <span class="o">+</span> <span class="s">"\n"</span> <span class="o">+</span>
                <span class="s">"Content: "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">content</span> <span class="o">+</span> <span class="s">"\n"</span> <span class="o">+</span>
                <span class="s">"Number: "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">+</span> <span class="s">"\n"</span> <span class="o">+</span>
                <span class="s">"Person: "</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">person</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getSimpleString</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">createTime</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">content</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">+</span> <span class="k">this</span><span class="o">.</span><span class="na">person</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="nc">Object</span> <span class="n">obj</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">obj</span> <span class="k">instanceof</span> <span class="nc">Account</span><span class="o">){</span>
            <span class="nc">Account</span> <span class="n">account</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Account</span><span class="o">)</span><span class="n">obj</span><span class="o">;</span>
            <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">createTime</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">account</span><span class="o">.</span><span class="na">getCreateTime</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compareTo</span><span class="o">(</span><span class="nc">Account</span> <span class="n">account</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">createTime</span><span class="o">.</span><span class="na">compareTo</span><span class="o">(</span><span class="n">account</span><span class="o">.</span><span class="na">createTime</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>GSON自动解析</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">static</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Account</span><span class="o">&gt;</span> <span class="nf">parseAllAccount</span><span class="o">(</span><span class="nc">String</span> <span class="n">jsonData</span><span class="o">){</span>
    <span class="c1">//使得可以解析Date型变量</span>
    <span class="nc">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GsonBuilder</span><span class="o">().</span><span class="na">setDateFormat</span><span class="o">(</span><span class="no">DATE_FORMAT</span><span class="o">).</span><span class="na">create</span><span class="o">();</span>
    <span class="k">return</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">jsonData</span><span class="o">,</span> <span class="k">new</span> <span class="nc">TypeToken</span><span class="o">&lt;</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Account</span><span class="o">&gt;&gt;(){}.</span><span class="na">getType</span><span class="o">());</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">static</span> <span class="nc">Account</span> <span class="nf">parseAccountDetail</span><span class="o">(</span><span class="nc">String</span> <span class="n">jsonData</span><span class="o">){</span>
    <span class="c1">//使得可以解析Date型变量</span>
    <span class="nc">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GsonBuilder</span><span class="o">().</span><span class="na">setDateFormat</span><span class="o">(</span><span class="no">DATE_FORMAT</span><span class="o">).</span><span class="na">create</span><span class="o">();</span>
    <span class="k">return</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">jsonData</span><span class="o">,</span> <span class="nc">Account</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>
:ET